#include <gtest/gtest.h>
#include <integer/integer.hpp>

///////// BITWISE NOT OPERATOR /////////

TEST(Not_operator, random_values) {
  /*
   * Test bitwise not operator for random values
   */
   std::default_random_engine int_gen(1768);
   Integer::set_random_engine(int_gen);

   Integer a, b;

   for (size_t test = 0; test < 10000; test++) {
     a.set_random_value();
     b = -a;
     EXPECT_EQ(~a, -a - 1);
     EXPECT_EQ(~b, -b - 1);
   }
}

///////// BITWISE AND OPERATOR /////////

TEST(And_operator, known_cases) {
  /*
   * Test bitwise not operator for many known cases
   */
   EXPECT_EQ(9223372036854775688_I & 18446744073709543616_I, 9223372036854767744_I);
   EXPECT_EQ(18446744073709543616_I & 9223372036854775688_I, 9223372036854767744_I);
   EXPECT_EQ(-9223372036854775688_I & 18446744073709543616_I, 9223372036854775872_I);
   EXPECT_EQ(18446744073709543616_I & -9223372036854775688_I, 9223372036854775872_I);
   EXPECT_EQ(9223372036854775688_I & -18446744073709543616_I, 7936_I);
   EXPECT_EQ(-18446744073709543616_I & 9223372036854775688_I, 7936_I);
   EXPECT_EQ(-9223372036854775688_I & -18446744073709543616_I, -18446744073709551552_I);
   EXPECT_EQ(-18446744073709543616_I & -9223372036854775688_I, -18446744073709551552_I);

   EXPECT_EQ(1427247692705959881058285969449495136382746424_I & 713623846352979940529142984724747568141373312_I, 713623846352979940529142984724747568141373184_I);
   EXPECT_EQ(713623846352979940529142984724747568141373312_I & 1427247692705959881058285969449495136382746424_I, 713623846352979940529142984724747568141373184_I);
   EXPECT_EQ(-1427247692705959881058285969449495136382746424_I & 713623846352979940529142984724747568141373312_I, 128_I);
   EXPECT_EQ(713623846352979940529142984724747568141373312_I & -1427247692705959881058285969449495136382746424_I, 128_I);
   EXPECT_EQ(1427247692705959881058285969449495136382746424_I & -713623846352979940529142984724747568141373312_I, 713623846352979940529142984724747568241373184_I);
   EXPECT_EQ(-713623846352979940529142984724747568141373312_I & 1427247692705959881058285969449495136382746424_I, 713623846352979940529142984724747568241373184_I);
   EXPECT_EQ(-1427247692705959881058285969449495136382746424_I & -713623846352979940529142984724747568141373312_I, -1427247692705959881058285969449495136382746496_I);
   EXPECT_EQ(-713623846352979940529142984724747568141373312_I & -1427247692705959881058285969449495136382746424_I, -1427247692705959881058285969449495136382746496_I);

   EXPECT_EQ(2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936570_I & 4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873151_I, 2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936570_I);
   EXPECT_EQ(4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873151_I & 2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936570_I, 2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936570_I);
   EXPECT_EQ(-2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936570_I & 4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873151_I, 2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936582_I);
   EXPECT_EQ(4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873151_I & -2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936570_I, 2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936582_I);
   EXPECT_EQ(2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936570_I & -4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873151_I, 0_I);
   EXPECT_EQ(-4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873151_I & 2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936570_I, 0_I);
   EXPECT_EQ(-2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936570_I & -4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873151_I, -4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873152_I);
   EXPECT_EQ(-4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873151_I & -2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936570_I, -4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873152_I);

}

TEST(And_operator, long_long_int_right_operand) {
  /*
   * Test bitwise AND operator having long long int at right operand
   */
   EXPECT_EQ(84641364664971364687_I & 4294867297, 2951350593_I);
   EXPECT_EQ(-84641364664971364687_I & 4294867297, 1343516705_I); //?
   EXPECT_EQ(84641364664971364687_I & -4294867297, 84641364662020014095_I);
   EXPECT_EQ(-84641364664971364687_I & -4294867297, -84641364666314881391_I);

   EXPECT_EQ(74632541234697134_I & 2146657097, 485622536_I);
   EXPECT_EQ(-74632541234697134_I & 2146657097, 1661034560_I); // ?
   EXPECT_EQ(74632541234697134_I & -2146657097, 74632540749074598_I);
   EXPECT_EQ(-74632541234697134_I & -2146657097, -74632542895731694_I);
}

TEST(And_operator, string_right_operand) {
  /*
   * Test bitwise AND operator having string at right operand
   */
   EXPECT_EQ(84641364664971364687_I & "4294867297", 2951350593_I);
   EXPECT_EQ(-84641364664971364687_I & "4294867297", 1343516705_I);
   EXPECT_EQ(84641364664971364687_I & "-4294867297", 84641364662020014095_I);
   EXPECT_EQ(-84641364664971364687_I & "-4294867297", -84641364666314881391_I);

   EXPECT_EQ(74632541234697134_I & "2146657097", 485622536_I);
   EXPECT_EQ(-74632541234697134_I & "2146657097", 1661034560_I);
   EXPECT_EQ(74632541234697134_I & "-2146657097", 74632540749074598_I);
   EXPECT_EQ(-74632541234697134_I & "-2146657097", -74632542895731694_I);

   EXPECT_EQ(1427247692705959881058285969449495136382746424_I & "713623846352979940529142984724747568141373312", 713623846352979940529142984724747568141373184_I);
   EXPECT_EQ(1427247692705959881058285969449495136382746424_I & "-713623846352979940529142984724747568141373312", 713623846352979940529142984724747568241373184_I);
   EXPECT_EQ(-1427247692705959881058285969449495136382746424_I & "713623846352979940529142984724747568141373312", 128_I);
   EXPECT_EQ(-1427247692705959881058285969449495136382746424_I & "-713623846352979940529142984724747568141373312", -1427247692705959881058285969449495136382746496_I);
}

TEST(And_operator, long_long_int_left_operand) {
  /*
   * Test bitwise AND operator having long long int at left operand
   */
   EXPECT_EQ(4294867297 & 84641364664971364687_I, 2951350593_I);
   EXPECT_EQ(4294867297 & -84641364664971364687_I, 1343516705_I);
   EXPECT_EQ(-4294867297 & 84641364664971364687_I, 84641364662020014095_I);
   EXPECT_EQ(-4294867297 & -84641364664971364687_I, -84641364666314881391_I);

   EXPECT_EQ(2146657097 & 74632541234697134_I, 485622536_I);
   EXPECT_EQ(2146657097 & -74632541234697134_I, 1661034560_I);
   EXPECT_EQ(-2146657097 & 74632541234697134_I, 74632540749074598_I);
   EXPECT_EQ(-2146657097 & -74632541234697134_I, -74632542895731694_I);
}

TEST(And_operator, string_left_operand) {
  /*
   * Test bitwise and operator having string at left operand
   */
   EXPECT_EQ("4294867297" & 84641364664971364687_I, 2951350593_I);
   EXPECT_EQ("4294867297" & -84641364664971364687_I, 1343516705_I);
   EXPECT_EQ("-4294867297" & 84641364664971364687_I, 84641364662020014095_I);
   EXPECT_EQ("-4294867297" & -84641364664971364687_I, -84641364666314881391_I);

   EXPECT_EQ("2146657097" & 74632541234697134_I, 485622536_I);
   EXPECT_EQ("2146657097" & -74632541234697134_I, 1661034560_I);
   EXPECT_EQ("-2146657097" & 74632541234697134_I, 74632540749074598_I);
   EXPECT_EQ("-2146657097" & -74632541234697134_I, -74632542895731694_I);

   EXPECT_EQ("713623846352979940529142984724747568141373312" & 1427247692705959881058285969449495136382746424_I, 713623846352979940529142984724747568141373184_I);
   EXPECT_EQ("-713623846352979940529142984724747568141373312" & 1427247692705959881058285969449495136382746424_I, 713623846352979940529142984724747568241373184_I);
   EXPECT_EQ("713623846352979940529142984724747568141373312" & -1427247692705959881058285969449495136382746424_I, 128_I);
   EXPECT_EQ("-713623846352979940529142984724747568141373312" & -1427247692705959881058285969449495136382746424_I, -1427247692705959881058285969449495136382746496_I);

}

TEST(And_operator_assignment, known_cases) {

  /*
   * Test And and assignment operator for known cases
  */
  Integer a;

  a = 18446735125608235970_I;
  EXPECT_EQ(a &= 9223372026854775809_I, 9223363088484401152_I);
  EXPECT_EQ(a, 9223363088484401152_I);

  a = -18446735125608235970_I;
  EXPECT_EQ(a &= 9223372026854775809_I, 8938370374656_I);
  EXPECT_EQ(a, 8938370374656_I);

  a = 18446735125608235970_I;
  EXPECT_EQ(a &= -9223372026854775809_I, 9223372037123834818_I);
  EXPECT_EQ(a, 9223372037123834818_I);

  a = -18446735125608235970_I;
  EXPECT_EQ(a &= -9223372026854775809_I, -18446744063978610626_I);
  EXPECT_EQ(a, -18446744063978610626_I);


  a = 79228162514264237593543950337_I;
  EXPECT_EQ(a &= 158455325028528675187087900673_I, 79227162514264317724756803585_I);
  EXPECT_EQ(a, 79227162514264317724756803585_I);

  a = -79228162514264237593543950337_I;
  EXPECT_EQ(a &= 158455325028528675187087900673_I, 79228162514264357462331097089_I);
  EXPECT_EQ(a, 79228162514264357462331097089_I);

  a = 79228162514264237593543950337_I;
  EXPECT_EQ(a &= -158455325028528675187087900673_I, 999999999919868787146753_I);
  EXPECT_EQ(a, 999999999919868787146753_I);

  a = -79228162514264237593543950337_I;
  EXPECT_EQ(a &= -158455325028528675187087900673_I, -158456325028528595055875047425_I);
  EXPECT_EQ(a, -158456325028528595055875047425_I);


  a = 1427247592907971416160798074459697157402867825_I;
  EXPECT_EQ(a &= 713623746554991475631655089734949589211494513_I, 713623746554991475631655089734949589211494513_I);
  EXPECT_EQ(a, 713623746554991475631655089734949589211494513_I);

  a = -1427247592907971416160798074459697157402867825_I;
  EXPECT_EQ(a &= 713623746554991475631655089734949589211494513_I, 1_I);
  EXPECT_EQ(a, 1_I);

  a = 1427247592907971416160798074459697157402867825_I;
  EXPECT_EQ(a &= -713623746554991475631655089734949589211494513_I, 713623846352979940529142984724747568191373313_I);
  EXPECT_EQ(a, 713623846352979940529142984724747568191373313_I);

  a = -1427247592907971416160798074459697157402867825_I;
  EXPECT_EQ(a &= -713623746554991475631655089734949589211494513_I, -1427247592907971416160798074459697157402867825_I);
  EXPECT_EQ(a, -1427247592907971416160798074459697157402867825_I);
}

TEST(And_operator_assignment, long_long_int_right_operand) {
  /*
   * Test bitwise And and assignment operator having long long int type at right operand
   */
  Integer n;
  EXPECT_EQ(n &= 46976464, 0_I);
  EXPECT_EQ(n, 0_I);

  n = 4878103974136479411354497036403033_I;
  EXPECT_EQ(n &= 4294967295, 800670041_I);
  EXPECT_EQ(n, 800670041_I);

  n = -4878103974136479411354497036403033_I;
  EXPECT_EQ(n &= 4294967295, 3494297255_I);
  EXPECT_EQ(n, 3494297255_I);

  n = 4878103974136479411354497036403033_I;
  EXPECT_EQ(n &= -4294967295, 4878103974136479411354496235732993_I);
  EXPECT_EQ(n, 4878103974136479411354496235732993_I);

  n = -4878103974136479411354497036403033_I;
  EXPECT_EQ(n &= -4294967295, -4878103974136479411354500530700287_I);
  EXPECT_EQ(n, -4878103974136479411354500530700287_I);
}

TEST(And_operator_assignment, string_right_operand) {
  /*
   * Test bitwise And and assignment operator having string type at right operand
   */
  Integer n;
  EXPECT_EQ(n &= "4697646", 0_I);
  EXPECT_EQ(n, 0_I);

  n = 26984782012266987412355446211_I;
  EXPECT_EQ(n &= "53646441131313478710003697788211", 6499229035860399575583958275_I);
  EXPECT_EQ(n, 6499229035860399575583958275_I);

  n = 26984782012266987412355446211_I;
  EXPECT_EQ(n &= "-53646441131313478710003697788211", 20485552976406587836771487937_I);
  EXPECT_EQ(n, 20485552976406587836771487937_I);

  n = -26984782012266987412355446211_I;
  EXPECT_EQ(n &= "53646441131313478710003697788211", 53639941902277618310428113829937_I);
  EXPECT_EQ(n, 53639941902277618310428113829937_I);

  n = -26984782012266987412355446211_I;
  EXPECT_EQ(n &= "-53646441131313478710003697788211", -53666926684289885297840469276147_I);
  EXPECT_EQ(n, -53666926684289885297840469276147_I);
}

///////// BITWISE OR OPERATOR /////////

TEST(Or_operator, known_cases) {
  /*
   * Test bitwise or operator for many known cases
   */
  EXPECT_EQ(79228162116951888803057165991_I | 39614081257132168328003561627_I, 79228162514264337537633742527_I);
  EXPECT_EQ(39614081257132168328003561627_I | 79228162116951888803057165991_I, 79228162514264337537633742527_I);
  EXPECT_EQ(-79228162116951888803057165991_I | 39614081257132168328003561627_I, -39614081257132169209630180901_I);
  EXPECT_EQ(39614081257132168328003561627_I | -79228162116951888803057165991_I, -39614081257132169209630180901_I);
  EXPECT_EQ(79228162116951888803057165991_I | -39614081257132168328003561627_I, -397312448734576576537_I);
  EXPECT_EQ(-39614081257132168328003561627_I | 79228162116951888803057165991_I, -397312448734576576537_I);
  EXPECT_EQ(-79228162116951888803057165991_I | -39614081257132168328003561627_I, -39614080859819719593426985091_I);
  EXPECT_EQ(-39614081257132168328003561627_I | -79228162116951888803057165991_I, -39614080859819719593426985091_I);

  EXPECT_EQ(5708990770823839524233143877797910799044518629_I | 18446744073708572830_I, 5708990770823839524233143877797980545530147583_I);
  EXPECT_EQ(18446744073708572830_I | 5708990770823839524233143877797910799044518629_I, 5708990770823839524233143877797980545530147583_I);
  EXPECT_EQ(-5708990770823839524233143877797910799044518629_I | 18446744073708572830_I, -5708990770823839524233143859351236471821574753_I);
  EXPECT_EQ(18446744073708572830_I | -5708990770823839524233143877797910799044518629_I, -5708990770823839524233143859351236471821574753_I);
  EXPECT_EQ(5708990770823839524233143877797910799044518629_I | -18446744073708572830_I, -69746485628953_I);
  EXPECT_EQ(-18446744073708572830_I | 5708990770823839524233143877797910799044518629_I, -69746485628953_I);
  EXPECT_EQ(-5708990770823839524233143877797910799044518629_I | -18446744073708572830_I, -18446674327222943877_I);

  EXPECT_EQ(2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I |
            8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320_I,
          8543948143683640329580086824678208458410818089426611079788144184243939003271210384541320402305003_I);
  EXPECT_EQ(8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320_I |
            2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I,
          8543948143683640329580086824678208458410818089426611079788144184243939003271210384541320402305003_I);
  EXPECT_EQ(-2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I |
            8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320_I,
          -42540819495079946611593229260028903683_I);
  EXPECT_EQ(8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320_I |
            -2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I,
          -42540819495079946611593229260028903683_I);
  EXPECT_EQ(2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I |
            -8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320_I,
          -6407961107762730247185065118508744297923459110483392851186451360969595732067444347658106289912421_I);
  EXPECT_EQ(-8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320_I |
            2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I,
          -6407961107762730247185065118508744297923459110483392851186451360969595732067444347658106289912421_I);
  EXPECT_EQ(-2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I |
            -8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320_I,
          -2135987035920910082395021706169464160487358978943218228601650282454848191257154443653954083488899_I);
  EXPECT_EQ(-8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320_I |
            -2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I,
          -2135987035920910082395021706169464160487358978943218228601650282454848191257154443653954083488899_I);
}

TEST(Or_operator, long_long_int_right_operand) {
  /*
   * Test bitwise or operator having long long int type at right operand
   */
   EXPECT_EQ(49730315547155694235_I | 4294869166, 49730315547351941823_I);
   EXPECT_EQ(49730315547155694235_I | -4294869166, -196247589_I);
   EXPECT_EQ(-49730315547155694235_I | 4294869166, -49730315543057072657_I);
   EXPECT_EQ(-49730315547155694235_I | -4294869166, -4098621577_I);

   EXPECT_EQ(7136971326544792002366487_I | 7891364, 7136971326544792004488631_I);
   EXPECT_EQ(7136971326544792002366487_I | -7891364, -2122145_I);
   EXPECT_EQ(-7136971326544792002366487_I | 7891364, -7136971326544791996597267_I);
   EXPECT_EQ(-7136971326544792002366487_I | -7891364, -5769219_I);
}

TEST(Or_operator, string_right_operand) {
  /*
   * Test bitwise or operator having string type at right operand
   */
   EXPECT_EQ(79228162116951888803057165991_I | "39614081257132168328003561627",
          79228162514264337537633742527_I);
   EXPECT_EQ(79228162116951888803057165991_I | "-39614081257132168328003561627",
                 -397312448734576576537_I);
   EXPECT_EQ(-79228162116951888803057165991_I | "39614081257132168328003561627",
                        -39614081257132169209630180901_I);
   EXPECT_EQ(-79228162116951888803057165991_I | "-39614081257132168328003561627",
                               -39614080859819719593426985091_I);

   EXPECT_EQ(2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I |
             "8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320",
           8543948143683640329580086824678208458410818089426611079788144184243939003271210384541320402305003_I);
   EXPECT_EQ(2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I |
             "-8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320",
           -6407961107762730247185065118508744297923459110483392851186451360969595732067444347658106289912421_I);
   EXPECT_EQ(-2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I |
             "8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320",
           -42540819495079946611593229260028903683_I);
   EXPECT_EQ(-2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I |
             "-8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320",
           -2135987035920910082395021706169464160487358978943218228601650282454848191257154443653954083488899_I);
}

TEST(Or_operator, long_long_int_left_operand) {
  /*
   * Test bitwise or operator having long long int type at left operand
   */
   EXPECT_EQ(4294869166 | 49730315547155694235_I, 49730315547351941823_I);
   EXPECT_EQ(-4294869166 | 49730315547155694235_I, -196247589_I);
   EXPECT_EQ(4294869166 | -49730315547155694235_I, -49730315543057072657_I);
   EXPECT_EQ(-4294869166 | -49730315547155694235_I, -4098621577_I);

   EXPECT_EQ(7891364 | 7136971326544792002366487_I, 7136971326544792004488631_I);
   EXPECT_EQ(-7891364 | 7136971326544792002366487_I, -2122145_I);
   EXPECT_EQ(7891364 | -7136971326544792002366487_I, -7136971326544791996597267_I);
   EXPECT_EQ(-7891364 | -7136971326544792002366487_I, -5769219_I);
}

TEST(Or_operator, string_left_operand) {
  /*
   * Test bitwise or operator having string type at left operand
   */
   EXPECT_EQ("39614081257132168328003561627" | 79228162116951888803057165991_I,
          79228162514264337537633742527_I);
   EXPECT_EQ("-39614081257132168328003561627" | 79228162116951888803057165991_I,
                 -397312448734576576537_I);
   EXPECT_EQ("39614081257132168328003561627" | -79228162116951888803057165991_I,
                        -39614081257132169209630180901_I);
   EXPECT_EQ("-39614081257132168328003561627" | -79228162116951888803057165991_I,
                               -39614080859819719593426985091_I);

   EXPECT_EQ("8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320" |
              2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I,
           8543948143683640329580086824678208458410818089426611079788144184243939003271210384541320402305003_I);
   EXPECT_EQ("-8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320" |
              2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I,
           -6407961107762730247185065118508744297923459110483392851186451360969595732067444347658106289912421_I);
   EXPECT_EQ("8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320" |
              -2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I,
           -42540819495079946611593229260028903683_I);
   EXPECT_EQ("-8543948143683640329580086824678208458410818089426611079788101643424443923324598791312060373401320" |
                -2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I,
           -2135987035920910082395021706169464160487358978943218228601650282454848191257154443653954083488899_I);
}

TEST(Or_operator_assignment, known_cases) {

  /*
   * Test And and assignment operator for known cases
  */
  Integer a;

  a = 18445744073709551617_I;
  EXPECT_EQ(a |= 78228162514264337593543950337_I, 78228162525780041841858150401_I);
  EXPECT_EQ(a, 78228162525780041841858150401_I);

  a = -18445744073709551617_I;
  EXPECT_EQ(a |= 78228162514264337593543950337_I, -11515704248314200065_I);
  EXPECT_EQ(a, -11515704248314200065_I);

  a = 18445744073709551617_I;
  EXPECT_EQ(a |= -78228162514264337593543950337_I, -78228162507334297768148598785_I);
  EXPECT_EQ(a, -78228162507334297768148598785_I);

  a = -18445744073709551617_I;
  EXPECT_EQ(a |= -78228162514264337593543950337_I, -6930039825395351553_I);
  EXPECT_EQ(a, -6930039825395351553_I);


  a = 6129982163463555432553408128601236734474956488734408705_I;
  EXPECT_EQ(a |= 3064991081731777715836714074300618367237478244367204353_I, 6129982163463555432553408128601236734474956488734408705_I);
  EXPECT_EQ(a, 6129982163463555432553408128601236734474956488734408705_I);

  a = -6129982163463555432553408128601236734474956488734408705_I;
  EXPECT_EQ(a |= 3064991081731777715836714074300618367237478244367204353_I, -3064991081731777716716694054300618367237478244367204353_I);
  EXPECT_EQ(a, -3064991081731777716716694054300618367237478244367204353_I);

  a = 6129982163463555432553408128601236734474956488734408705_I;
  EXPECT_EQ(a |= -3064991081731777715836714074300618367237478244367204353_I, -1_I);
  EXPECT_EQ(a, -1_I);

  a = -6129982163463555432553408128601236734474956488734408705_I;
  EXPECT_EQ(a |= -3064991081731777715836714074300618367237478244367204353_I, -3064991081731777715836714074300618367237478244367204353_I);
  EXPECT_EQ(a, -3064991081731777715836714074300618367237478244367204353_I);
}

TEST(Or_operator_assignment, long_long_int_right_operand) {
  /*
   * Test or operator and assignment having long long int at right operand
   */
   Integer n;
   EXPECT_EQ(n |= 0, 0_I);

   n = 8320364711369971365482016988744123_I;
   EXPECT_EQ(n |= 4294967295, 8320364711369971365482020909088767_I);
   EXPECT_EQ(n, 8320364711369971365482020909088767_I);

   n = 8320364711369971365482016988744123_I;
   EXPECT_EQ(n |= -4294967295, -3920344645_I);
   EXPECT_EQ(n, -3920344645_I);

   n = -8320364711369971365482016988744123_I;
   EXPECT_EQ(n |= 4294967295, -8320364711369971365482016614121473_I);
   EXPECT_EQ(n, -8320364711369971365482016614121473_I);

   n = -8320364711369971365482016988744123_I;
   EXPECT_EQ(n |= -4294967295, -374622651_I);
   EXPECT_EQ(n, -374622651_I);
}

TEST(Or_operator_assignment, string_right_operand) {
  /*
   * Test or operator and assignment having string at right operand
   */
   Integer n;
   EXPECT_EQ(n |= "0", 0_I);

   n = 972000364774122545411026674411111115547454111_I;
   EXPECT_EQ(n |= "42360206598766163657616", 972000364774122545411026828408394782068157343_I);
   EXPECT_EQ(n, 972000364774122545411026828408394782068157343_I);

   n = 972000364774122545411026674411111115547454111_I;
   EXPECT_EQ(n |= "-42360206598766163657616", -153997283666520703233_I);
   EXPECT_EQ(n, -153997283666520703233_I);

   n = -972000364774122545411026674411111115547454111_I;
   EXPECT_EQ(n |= "42360206598766163657616", -972000364774122545410984468201796015904499727_I);
   EXPECT_EQ(n, -972000364774122545410984468201796015904499727_I);

   n = -972000364774122545411026674411111115547454111_I;
   EXPECT_EQ(n |= "-42360206598766163657616", -42206209315099642954383_I);
   EXPECT_EQ(n, -42206209315099642954383_I);
}

TEST(Not_And_Operator, get_null_value) {
  /*
   * Test a & ~a == 0 for any random value for a
  */
  std::default_random_engine int_gen(43287);
  Integer::set_random_engine(int_gen);
  Integer a, b;

  for (size_t test = 0; test < 10000; test++) {
    a.set_random_value();
    b = -a;

    EXPECT_EQ(a & ~a, 0);
    EXPECT_EQ(a &= ~a, 0);
    EXPECT_EQ(b & ~b, 0);
    EXPECT_EQ(b &= ~b, 0);
  }
}

TEST(Not_Or_operator, get_power_value) {
  /*
   * Test a | ~a == 1<< (a.n_bits() - 1) for any random value for a
  */
  std::default_random_engine int_gen(23478);
  Integer::set_random_engine(int_gen);
  Integer a, b, a_mask, b_mask;

  for (size_t test = 0; test < 10000; test++) {
    a.set_random_value();
    b = -a;

    /*a_mask = (1_I << a.n_bits()) - 1;
    b_mask = (1_I << b.n_bits()) - 1;*/

    EXPECT_EQ(a | ~a, -1_I);
    EXPECT_EQ(a |= ~a, -1_I);
    EXPECT_EQ(b | ~b, -1_I);
    EXPECT_EQ(b |= ~b, -1_I);
  }
}

///////// BITWISE SHIFT OPERATORS /////////

TEST(Shift_left, known_cases) {
  /*
   * Test bitwise shift left operator for many known cases
   */
   EXPECT_EQ(0_I << (size_t)65, 0_I);
   EXPECT_EQ(697534543_I << (size_t)96, 55264380132117105704510399148036456448_I);
   EXPECT_EQ(-697534543_I << (size_t)96, -55264380132117105704510399148036456448_I);

   EXPECT_EQ(2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I << (size_t)72,
              10086913586276986678343434265636349782534075008300040082709787297752989889058666341267324871097423428635908283461271552_I);

   EXPECT_EQ(-2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I << (size_t)72,
             -10086913586276986678343434265636349782534075008300040082709787297752989889058666341267324871097423428635908283461271552_I);

   //EXPECT_EQ(2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I << (size_t)72,
    //                    10086913586276986678343434265636349782534075008300040082709787297752989889058666341267324871097423428635908283461271552_I);
   EXPECT_EQ(115792089237316195423570985008687907853269984665640564039457584007913129639935_I << (size_t)1,
              231584178474632390847141970017375815706539969331281128078915168015826259279870_I);

   EXPECT_EQ(-115792089237316195423570985008687907853269984665640564039457584007913129639935_I << (size_t)1,
             -231584178474632390847141970017375815706539969331281128078915168015826259279870_I);
}

TEST(Shift_left_assignment, known_cases) {
  /*
   * Test bitwise shift left assignment operator for many known cases
   */
   Integer n;
   EXPECT_EQ(n <<= (size_t)78, 0_I);
   EXPECT_EQ(n, 0_I);

   n = 4611686018427387904_I;
   EXPECT_EQ(n <<= (size_t)124, 98079714615416886934934209737619787751599303819750539264_I);
   EXPECT_EQ(n, 98079714615416886934934209737619787751599303819750539264_I);

   n = -4611686018427387904_I;
   EXPECT_EQ(n <<= (size_t)124, -98079714615416886934934209737619787751599303819750539264_I);
   EXPECT_EQ(n, -98079714615416886934934209737619787751599303819750539264_I);

   n = 36028797018963968_I;
   EXPECT_EQ(n <<= (size_t)8, 9223372036854775808_I);
   EXPECT_EQ(n, 9223372036854775808_I);

   n = -36028797018963968_I;
   EXPECT_EQ(n <<= (size_t)8, -9223372036854775808_I);
   EXPECT_EQ(n, -9223372036854775808_I);
}

TEST(Shift_right, known_cases) {
  /*
   * Test bitwise shift right operator for many known cases
   */
   EXPECT_EQ(0_I >> (size_t)65, 0_I);

   EXPECT_EQ(55264380132117105704510399148036456448_I >> (size_t)96, 697534543_I);
   EXPECT_EQ(-55264380132117105704510399148036456448_I >> (size_t)96, -697534543_I);
   EXPECT_EQ(55264380132117105704510399148036456449_I >> (size_t)96, 697534543_I);
   EXPECT_EQ(-55264380132117105704510399148036456449_I >> (size_t)96, -697534544_I);

   EXPECT_EQ(10086913586276986678343434265636349782534075008300040082709787297752989889058666341267324871097423428635908283461271552_I >> (size_t)72,
            2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I);
   EXPECT_EQ(-10086913586276986678343434265636349782534075008300040082709787297752989889058666341267324871097423428635908283461271552_I >> (size_t)72,
           -2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I);
   EXPECT_EQ(10086913586276986678343434265636349782534075008300040082709787297752989889058666341267324871097423428635908283461271553_I >> (size_t)72,
            2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392587_I);
   EXPECT_EQ(-10086913586276986678343434265636349782534075008300040082709787297752989889058666341267324871097423428635908283461271553_I >> (size_t)72,
           -2135987035920910082395021706169464160487358978943218228601692823274343271203766036883214112392588_I);

   EXPECT_EQ(231584178474632390847141970017375815706539969331281128078915168015826259279870_I >> (size_t)1,
              115792089237316195423570985008687907853269984665640564039457584007913129639935_I);
   EXPECT_EQ(-231584178474632390847141970017375815706539969331281128078915168015826259279870_I >> (size_t)1,
             -115792089237316195423570985008687907853269984665640564039457584007913129639935_I);
   EXPECT_EQ(231584178474632390847141970017375815706539969331281128078915168015826259279871_I >> (size_t)1,
              115792089237316195423570985008687907853269984665640564039457584007913129639935_I);
   EXPECT_EQ(-231584178474632390847141970017375815706539969331281128078915168015826259279871_I >> (size_t)1,
             -115792089237316195423570985008687907853269984665640564039457584007913129639936_I);

}


TEST(Shift_right_assignment, known_cases) {
  /*
   * Test bitwise shift right assignment operator for many known cases
   */
   Integer n;
   EXPECT_EQ(n >>= (size_t)78, 0_I);
   EXPECT_EQ(n, 0_I);

   n = 45671926166590716193865151022383844364247891967_I;
   EXPECT_EQ(n >>= (size_t)62, 9903520314283042199192993791_I);
   EXPECT_EQ(n, 9903520314283042199192993791_I);

   n = -45671926166590716193865151022383844364247891967_I;
   EXPECT_EQ(n >>= (size_t)62, -9903520314283042199192993792_I);
   EXPECT_EQ(n, -9903520314283042199192993792_I);

   n = 91343852333181432387730302044767688728495783934_I;
   EXPECT_EQ(n >>= (size_t)62, 19807040628566084398385987583_I);
   EXPECT_EQ(n, 19807040628566084398385987583_I);

   n = -91343852333181432387730302044767688728495783934_I;
   EXPECT_EQ(n >>= (size_t)62, -19807040628566084398385987584_I);
   EXPECT_EQ(n, -19807040628566084398385987584_I);
}
